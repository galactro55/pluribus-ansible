#Fabric creation
---


# This task is to configure initial ZTP setup on all switches.
# It uses pn_initial_ztp.py module from library/ directory.
# pn_cliusername and pn_clipassword comes from vars file - cli_vault.yml
# If the tasks fails then it will retry as specified by retries count.
- name: Zero Touch Provisioning - Initial setup
  hosts: all
  serial: 1
  become: true
  # become_method: su
  # become_user: root

  vars_files:
  - cli_vault.yml
  - playbook-variable.yml

  tasks:
    - name: Auto accept EULA, Disable STP, enable ports and create/join fabric
      pn_initial_ztp:
        pn_cliusername: "{{ USERNAME }}"                              # Cli username (value comes from cli_vault.yml).
        pn_clipassword: "{{ PASSWORD }}"                              # Cli password (value comes from cli_vault.yml).
        pn_fabric_name: "{{ pn_fabric_name }}"                        # Name of the fabric to create/join.
        pn_current_switch: "{{ inventory_hostname }}"                 # Name of the switch on which this task is currently getting executed.
        pn_spine_list: "{{ groups['spine'] }}"                        # List of all spine switches mentioned under [spine] grp in hosts file.
        pn_leaf_list: "{{ groups['leaf'] }}"                          # List of all leaf switches mentioned under [leaf] grp in hosts file.
        pn_toggle_40g: "{{ pn_toggle_40g }}"                          # Flag to indicate if 40g ports should be converted to 10g ports or not.
        pn_inband_ip: "{{ pn_inband_ip }}"                            # Inband ips to be assigned to switches starting with this value. Default: 172.16.0.0/24.
        pn_fabric_network: "{{ pn_fabric_network }}"                  # Choices: in-band or mgmt.  Default: mgmt
        pn_fabric_control_network: "{{ pn_fabric_control_network }}"  # Choices: in-band or mgmt.  Default: mgmt
        pn_static_setup: True                                         # Flag to indicate if static values should be assign to following switch setup params. Default: True.
        pn_mgmt_ip: "{{ ansible_host }}"                              # Specify MGMT-IP value to be assign if pn_static_setup is True.
        pn_mgmt_ip_subnet: "{{ pn_mgmt_ip_subnet }}"                  # Specify subnet mask for MGMT-IP value to be assign if pn_static_setup is True.
        pn_gateway_ip: "{{ pn_gateway_ip }}"                          # Specify GATEWAY-IP value to be assign if pn_static_setup is True.
        pn_dns_ip: "{{ pn_dns_ip }}"                                  # Specify DNS-IP value to be assign if pn_static_setup is True.
        pn_dns_secondary_ip: "{{ pn_dns_secondary_ip }}"              # Specify DNS-SECONDARY-IP value to be assign if pn_static_setup is True.
        pn_domain_name: "{{ pn_domain_name }}"                        # Specify DOMAIN-NAME value to be assign if pn_static_setup is True.
        pn_ntp_server: "{{ pn_ntp_server }}"                          # Specify NTP-SERVER value to be assign if pn_static_setup is True.
        pn_stp: "{{ pn_stp }}"                                        # Specify True if you want to enable STP at the end. Default: False.
      register: ztp_out              # Variable to hold/register output of the above tasks.
      until: ztp_out.failed != true  # If the above code fails it will retry the code
      retries: 3                     # This is the retries count
      delay: 3
      # ignore_errors: yes             # Flag to indicate if we should ignore errors if any.

    - pause:
        seconds: 2                   # Pause playbook execution for specified amount of time.
